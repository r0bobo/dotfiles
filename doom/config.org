#+TITLE: Config
#+AUTHOR: Dean Lindqvist Todevski
#+EMAIL: dean.todevski.com
#+LANGUAGE: en
#+STARTUP: inlineimages
#+STARTUP: overview
#+PROPERTY: header-args :tangle yes :cache yes :results silent :padline no

* Table of Contents :TOC_3_gh:
:PROPERTIES:
:VISIBILITY: children
:END:
- [[#configuration][Configuration]]
  - [[#header][Header]]
  - [[#personal-info][Personal Info]]
  - [[#general][General]]
  - [[#global-keymaps][Global Keymaps]]
  - [[#projectile][Projectile]]
  - [[#ui][UI]]
  - [[#pretty-code][Pretty Code]]
  - [[#org-mode][Org-Mode]]
    - [[#capture-templates][Capture Templates]]
  - [[#ansible][Ansible]]
    - [[#documentation][Documentation]]
    - [[#activation][Activation]]
  - [[#systemd][Systemd]]
  - [[#magit][Magit]]
- [[#things-to-remember][Things to remember]]
  - [[#keysfeatures][Keys/features]]
  - [[#tips][Tips]]
    - [[#how-to-search-github][How to search github]]

* Configuration
:PROPERTIES:
:VISIBILITY: children
:END:
** Header
#+BEGIN_SRC elisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-
#+END_SRC

** Personal Info
#+BEGIN_SRC elisp
(setq user-full-name "Dean Lindqvist Todevski"
      user-mail-address "dean.todevski@gmail.com")
#+END_SRC

** General
Change localleader to ~,~
#+BEGIN_SRC elisp
(setq doom-localleader-key ",")
#+END_SRC

Shorten which-key popup delay
#+BEGIN_SRC elisp
(use-package! which-key
  :config
  (setq which-key-idle-delay 0.5))
#+END_SRC

Authsources are used in for example Forge
#+BEGIN_SRC elisp
(setq auth-sources '("~/.authinfo"))
#+END_SRC

Repeat searches with snipe or ~f/t~ upon pressing the key again.
#+BEGIN_SRC elisp
(setq evil-snipe-repeat-keys t)
#+END_SRC

** Global Keymaps

#+BEGIN_SRC elisp
(map!
 :leader
 :desc "Search in project" "/" #'+default/search-project
 :desc "Doom dashboard" "b h" #'+doom-dashboard/open)
#+END_SRC

Go to last changes hydra
#+BEGIN_SRC elisp
(defhydra hydra-goto-chg (:timeout 2)
  "goto-chg"
  (";" goto-last-change "goto-last-change")
  ("," goto-last-change-reverse "goto-last-change-reverse")
  ("i" goto-last-change-reverse "goto-last-change-reverse")
  )

(map! :n "g;" 'hydra-goto-chg/goto-last-change)
#+END_SRC

** Projectile
#+BEGIN_SRC elisp
(setq projectile-project-search-path '("~/src/" "~/projects/"))
#+END_SRC
** UI
#+BEGIN_SRC elisp
(setq doom-font (font-spec :family "Source Code Pro" :size 14)
      doom-variable-pitch-font (font-spec :family "Source Code Pro" :size 14)
      doom-unicode-font (font-spec :family "Source Code Pro" :size 14)
      doom-big-font (font-spec :family "Source Code Pro" :size 26))

(setq doom-theme 'doom-vibrant
      display-line-numbers-type t)
#+END_SRC

** Pretty Code
#+BEGIN_SRC elisp
(setq +pretty-code-enabled-modes '(org-mode))
#+END_SRC
** Org-Mode
#+BEGIN_SRC elisp
(setq org-directory "~/org/")
#+END_SRC

*** Capture Templates
#+BEGIN_SRC elisp
(after! org
  (add-to-list 'org-capture-templates
               '("l" "Link" entry
                 (file+headline "links.org" "New Links")
                 "* %(org-cliplink-capture)\n :PROPERTIES:\n :CATEGORY: %?\n :END:\n %i\n"
                 :prepend t :kill-buffer t)))

(after! org
  (add-to-list 'org-capture-templates
               '("t" "Personal todo" entry
                 (file+headline +org-capture-todo-file "Todos")
                 "* TODO %?\n%i\n%a" :prepend t)))
#+END_SRC

** Ansible
*** Documentation
#+BEGIN_SRC elisp
(after! ansible-doc
  (set-evil-initial-state! '(ansible-doc-module-mode) 'normal))

(set-popup-rule! "^\\*ansible-doc"
  :height 0.4 :quit t :select t :ttl t)

(set-lookup-handlers! 'ansible-mode
  :documentation #'ansible-doc)
#+END_SRC

*** Activation
Mode enabled based on filename regex taken from [[https://github.com/syl20bnr/spacemacs/blob/develop/layers/%2Btools/ansible/config.el#L19][Spacemacs]].

#+BEGIN_SRC elisp
(def-project-mode! +ansible-yaml-mode
  :modes '(yaml-mode)
  :add-hooks '(ansible ansible-auto-decrypt-encrypt ansible-doc-mode)
  :match "/\\(main\\|site\\|encrypted\\|\\(\\(roles\\|tasks\\|handlers\\|vars\\|defaults\\|meta\\|group_vars\\|host_vars\\)/.+\\)\\)\\.ya?ml$")
#+END_SRC

** Systemd
#+BEGIN_SRC elisp
(map! :map systemd-mode-map
      :localleader
      "d" #'systemd-doc-directives
      "h" #'systemd-doc-open)
#+END_SRC

** Magit
#+BEGIN_SRC elisp
(setq magit-repository-directories
      '(("~/src" . 2)
        ("~/projects" . 2)))
#+END_SRC


* Things to remember

** Keys/features
| Key                 | Effect                                            |
|---------------------+---------------------------------------------------|
| ~SPC u SPC '~       | Choose Ivy session to resume                      |
| ~g;~, ~g,~, ~gi~    | Go to last change, edit at last change            |
| ~C-c C-e~           | Edit dired files as text                          |
| ~:s//test/~         | Replace string that was previously replaced       |
| ~:s/foo/&bar~       | Will change foo to foobar                         |
| ~:%!jq --sort-keys~ | Run external command on region                    |
| ~SPC p t~           | Show project todos in magit                       |
| ~S-SPC~             | Start a sub-search of what Ivy currently displays |
| ~g p~               | Selected pasted text                              |
| ~=~                 | Fix indentation on selected text                  |

** Tips
*** How to search github
If you want to see how others are configuring different parts of emacs
you can use the following to search github to spy on them:

~language:emacs-lisp language:org type:Code {symbol,hook,function,etc}~

For example I just wanted to see how others were enabling
~pdf-view-midnight-minor-mode~ with doom, so I searched:

~language:emacs-lisp language:org type:Code pdf-view-midnight-minor-mode doom~
